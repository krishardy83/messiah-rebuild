---
import type { HTMLAttributes } from "astro/types";
import { cn } from "../lib/utils";

interface Props extends HTMLAttributes<"article"> {
  title: string;
  image?: {
    src: string;
    alt?: string;
  };
  options?: {
    name: string;
    href: string;
  }[];
}

const { title, image, options, class: className, ...props } = Astro.props;
---

<article {...props} class={cn("not-prose border border-gray-300 bg-gray-100 px-6 py-4", className)}>
  {
    image ? (
      <figure class="mb-4">
        <img src={image.src} alt={image.alt} class="w-full" />
      </figure>
    ) : null
  }

  <h3 class="mb-2 h4 text-primary-800">{title}</h3>
  <div class="text-sm">
    <slot />
  </div>

  {
    options ? (
      <select
        data-dropdown
        aria-label="please select a page"
        class="bg-white w-full border border-gray-300 block p-2 rounded-md mt-4"
      >
        <option disabled>Please select...</option>
        {options.map((option) => (
          <option value={option.href}>{option.name}</option>
        ))}
      </select>
    ) : null
  }
</article>

<script>
  function handleDropdownChange(event: Event) {
    let { value } = event.target as HTMLSelectElement;

    if (value) {
      window.location.href = value;
    }
  }

  document.querySelectorAll("[data-dropdown]").forEach((dropdown) => {
    dropdown.addEventListener("change", handleDropdownChange);
  });
</script>
