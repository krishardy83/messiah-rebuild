---
import type { ComponentProps, HTMLAttributes } from "astro/types";
import { cn } from "../lib/utils";
import Icon from "./icon.astro";

export enum Program {
  Major = "M",
  Minor = "m",
  Concentration = "C",
  PreHealthAdvising = "P",
  ThreePlusPartnerPrograms = "3+",
  TeachingCertificate = "T",
  Accelerated = "A",
  EarlyAssurance = "E",
  UndergraduateCertificate = "UC",
  Online = "O",
  Hybrid = "H",
  Campus = "CA",
}

interface Props extends HTMLAttributes<"article"> {
  programs: Program[];
  showText?: boolean;
}

const { programs, showText = false, class: className, ...props } = Astro.props;

const colorMap: { [K in Program]: string } = {
  M: "#273d5e",
  m: "#4d87a9",
  C: "#ab4e42",
  P: "#7477b8",
  "3+": "#84ab8b",
  T: "#e37b65",
  A: "#DCAC42",
  E: "#afafaf",
  UC: "#0a0a0ab3",
  O: "transparent",
  H: "transparent",
  CA: "transparent",
};

const textMap: { [K in Program]: string } = {
  M: "Major",
  m: "Minor",
  C: "Concentration",
  P: "Pre-Health Advising",
  "3+": "3+ Partner Programs",
  T: "Teaching Certificate",
  A: "Accelerated",
  E: "Early Assurance",
  UC: "Undergraduate Certificate",
  O: "Online",
  H: "Hybrid",
  CA: "Campus",
};

const iconMap: { [K in Program]: ComponentProps<typeof Icon>["name"] | null } = {
  M: null,
  m: null,
  T: null,
  UC: null,
  A: null,
  E: null,
  C: null,
  P: null,
  "3+": null,
  O: "computer",
  CA: "library",
  H: "scale",
};
---

<ul
  data-analytics="program-list"
  class={cn(
    "flex",
    {
      "gap-2": !showText,
      "gap-8": showText,
    },
    className
  )}
  {...props}
>
  {
    programs.map((program) => (
      <li class="flex items-center gap-2 text-white" style={{ "--background": colorMap[program] }}>
        <span class="flex items-center justify-center shrink-0 rounded-full size-6 text-sm bg-[var(--background)]">
          {iconMap[program] ? <Icon name={iconMap[program]!} /> : program}
        </span>
        {showText ? <span>{textMap[program]}</span> : null}
      </li>
    ))
  }
</ul>
