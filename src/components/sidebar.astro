---
interface Props {
  links: {
    title: string;
    children: {
      name: string;
      href: string;
      children?: {
        name: string;
        href: string;
      }[];
    }[];
  }[];
}

const { links } = Astro.props;
---

<aside
  class="sidebar mb-6 flex-shrink-0 border-b border-gray-300 md:mb-0 md:w-[270px] md:border-b-0 md:border-r"
>
  <button type="button" class="btn-secondary w-full md:hidden" data-toggle data-target="#sidebar">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      stroke-width="1.5"
      stroke="currentColor"
      class="size-6"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path>
    </svg>

    Show sidebar
  </button>

  <div class="mb-6 mt-4 hidden md:mb-0 md:mt-0 md:block" id="sidebar">
    <slot />

    {
      links.map((link) => (
        <nav aria-label={link.title}>
          <h2 class="mt-6 mb-2 uppercase font-title text-xl font-bold text-primary-800">
            {link.title}
          </h2>

          <ul class="list-disc space-y-1 pl-6">
            {link.children.map((child) => (
              <li>
                <a href={child.href} class="link">
                  {child.name}
                </a>
              </li>
            ))}
          </ul>
        </nav>
      ))
    }
  </div>
</aside>

<script>
  let toggle = document.querySelector<HTMLButtonElement>("[data-toggle]");

  if (toggle) {
    toggle.addEventListener("click", () => {
      let target = document.querySelector<HTMLDivElement>(toggle.dataset.target as string);

      target?.classList.toggle("hidden");
    });
  }
</script>
