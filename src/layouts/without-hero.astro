---
import type { ComponentProps } from "astro/types";
import Breadcrumbs from "../components/breadcrumbs.astro";
import CtaSidebarLinks from "../components/cta-sidebar-links.astro";
import Sidebar from "../components/sidebar.astro";
import { cn } from "../lib/utils";
import BaseLayout from "./base.astro";

interface Props {
  title: string;
  description: string;
  analyticsKey?: string;
  breadcrumbs: {
    name: string;
    href: string;
  }[];
  sidebarLinks?: ComponentProps<typeof Sidebar>["links"];
}

const { title, description, sidebarLinks, analyticsKey, breadcrumbs } = Astro.props;
---

<BaseLayout title={title} description={description} transparent={false}>
  <main id="content" data-analytics={analyticsKey}>
    <header class="bg-gray-100">
      <h1
        class="px-6 max-w-6xl mx-auto font-title pb-6 pt-8 uppercase tracking-widest text-3xl md:text-4xl text-primary-800 leading-none"
      >
        {title}
      </h1>
    </header>
  </main>

  <CtaSidebarLinks />

  <div class="relative mx-auto max-w-6xl">
    <div class="bg-white px-6 py-4">
      <Breadcrumbs links={breadcrumbs} />

      <div class="flex flex-col lg:flex-row">
        <!-- Either render a default sidebar with the links or render the slot -->
        {sidebarLinks ? <Sidebar links={sidebarLinks} /> : null}
        {Astro.slots.has("sidebar") ? <slot name="sidebar" /> : null}

        <div
          class:list={cn("flex-1", {
            "md:px-10 md:py-8": sidebarLinks || Astro.slots.has("sidebar"),
            "py-8": !sidebarLinks && !Astro.slots.has("sidebar"),
          })}
        >
          <slot />
        </div>
      </div>
    </div>
  </div>
</BaseLayout>
