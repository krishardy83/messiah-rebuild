---
import Icon from "../components/icon.astro";
import WithoutHero from "../layouts/without-hero.astro";
---

<WithoutHero
  title="Meet our faculty"
  description="Meet our faculty"
  sidebarLinks={[
    {
      title: "Web Services",
      children: [
        { href: "/", name: "FAQ's" },
        { href: "/", name: "Project planning" },
        { href: "/", name: "Services provided" },
        { href: "/", name: "Support & training" },
        { href: "/", name: "Website governance" },
      ],
    },
  ]}
  breadcrumbs={[
    { name: "Home", href: "/" },
    { name: "Academics", href: "/" },
    { name: "Meet our faculty", href: "/" },
  ]}
>
  <div class="rich-text mb-8">
    <img src="https://www.messiah.edu/images/Communciations_Faculty.jpg" />
    <h2 class="h3">Meet our faculty</h2>
    <p>
      Our faculty draw from a wide range of communication backgrounds and areas of expertise. You'll
      find each one committed to top-quality teaching and scholarship as well as advising and
      mentoring students in our Department.
    </p>
  </div>

  <div
    x-data="{
      faculties: [],
      loading: true,
      error: null,
      department: '',
      gradSubjects: 'Counseling',
      entryIds: '',
      
      filters: {
        query: '',
        type: '',
      },

      init() {
        fetch('https://cascade-prod.messiah.edu/faculty/_data/faculty-directory-json.json')
          .then((response) => response.json())
          .then((data) => {
            this.faculties = data.items.filter((faculty) => {
              const matchesDepartment = this.department.length ? faculty.department === this.department : true;
              const matchesGradSubjects = this.gradSubjects.length ? faculty.gradSubjects.split('|').includes(this.gradSubjects) : true;
              
              if (this.entryIds.length) {
                return this.entryIds.split('|').includes(faculty.entry_id);
              }

              return matchesDepartment && matchesGradSubjects;
            });
            this.loading = false;
          })
          .catch((error) => {
            this.error = `Could not fetch faculty data (${error.message})`;
            this.loading = false;
          });
      },

      getLastName(name) {
        const parts = name.trim().split(' ');

        return parts[parts.length - 1];
      },

      isMatchingType(faculty) {
        const { type } = this.filters;

        if (type === 'full-time') {
          return faculty.staff !== 'Yes' && faculty.adjunct !== 'Yes';
        } else if (type === 'adjunct') {
          return faculty.staff !== 'Yes' && faculty.adjunct === 'Yes';
        } else if (type === 'emeritus') {
          return faculty.emeritus === 'Yes';
        }

        return true;
      },

      getFilteredFaculties() {
        const query = this.filters.query.trim().toLowerCase();

        return this.faculties.filter((faculty) => {
          const matchesQuery = faculty.first_name.toLowerCase().includes(query) || faculty.last_name.toLowerCase().includes(query);
          const matchesType = this.isMatchingType(faculty);

          return matchesQuery && matchesType;
        });
      },

      getFacultyOptions() {
        const options = new Map();

        options.set('full-time', 'Full time faculty');

        for (const faculty of this.faculties) {
          if (faculty.adjunct === 'Yes') {
            options.set('adjunct', 'Adjunct faculty');
          }

          if (faculty.emeritus === 'Yes') {
            options.set('emeritus', 'Emeritus');
          }
        }

        return Array.from(options);
      },

      getSortedFaculties() {
        const sorted = this.getFilteredFaculties().sort((a, b) => {
          const aLastName = this.getLastName(a.last_name);
          const bLastName = this.getLastName(b.last_name);
          
          return aLastName.localeCompare(bLastName);
        });

        const chairs = sorted.filter((faculty) => faculty.chair === 'Yes');
        const nonChairs = sorted.filter((faculty) => faculty.chair !== 'Yes');

        return [...chairs, ...nonChairs];
      },

      getFaculties() {
        const sorted = this.getSortedFaculties();

        const first = sorted.filter((faculty) => faculty.staff !== 'Yes');

        return first;
      },

      getStaff() {
        const sorted = this.getSortedFaculties();

        const first = sorted.filter((faculty) => faculty.staff === 'Yes');

        return first;
      },

      hasContactInfo(faculty) {
        return faculty.email || faculty.phone || faculty.website;
      }
    }"
  >
    <div class="flex flex-col sm:flex-row gap-4 mb-8">
      <select
        class="bg-white min-h-12 px-4 border border-gray-300 sm:w-1/2 select"
        x-model="filters.type"
        x-show="getFacultyOptions().length > 1"
      >
        <option value="" disabled="" selected="">Filter faculty</option>
        <template x-for="[value, label] in getFacultyOptions()">
          <option :value="value" x-text="label"></option>
        </template>
      </select>

      <div class="relative sm:w-1/2">
        <Icon name="search" class="absolute top-1/2 left-4 size-5 -translate-y-1/2 text-gray-400" />
        <input
          type="text"
          x-model="filters.query"
          autocomplete="off"
          placeholder="Search by name"
          aria-label="Search by name"
          class="bg-white w-full min-h-12 px-4 pl-12 border border-gray-300"
        />
        <button
          type="button"
          title="Clear input"
          x-show="filters.query.length > 0"
          @click="filters.query = ''"
          class="absolute top-1/2 right-4 -translate-y-1/2 text-gray-400 cursor-pointer"
        >
          <Icon name="close" class="size-5 shrink-0" />
        </button>
      </div>

      <button
        x-show="filters.type || filters.query"
        type="button"
        @click="filters.type = ''; filters.query = ''"
      >
        Reset
      </button>
    </div>

    <template x-if="loading">
      <div
        role="alert"
        class="bg-tertiary-100 border border-tertiary-200 text-tertiary-800 px-4 py-2"
      >
        <p>Loading faculty list...</p>
      </div>
    </template>

    <template x-if="error">
      <div role="alert" class="text-red-600 border border-red-200 bg-red-50 py-2 px-4">
        <p class="mb-2">Snap! Something went wrong. Please refresh the page or try again later.</p>
        <code x-text="error" class="text-sm leading-none"></code>
      </div>
    </template>

    <div x-show="!loading && !error">
      <h2 class="h3">Faculty</h2>

      <template x-if="getFaculties().length === 0 && !loading && !error">
        <div
          role="alert"
          class="bg-tertiary-100 border border-tertiary-200 text-tertiary-800 px-4 py-2"
        >
          <p>No faculty matches your filter.</p>
        </div>
      </template>

      <div class="grid sm:grid-cols-2 md:grid-cols-3 gap-4 mb-8">
        <template x-for="faculty in getFaculties()">
          <article class="@container border border-gray-300 bg-gray-100 px-6 py-4">
            <div class="flex flex-col @md:flex-row gap-4 h-full">
              <figure class="@md:w-1/3">
                <img
                  :src="faculty.headshotURL"
                  :alt="faculty.first_name + ' ' + faculty.last_name"
                  class="w-full object-cover shrink-0 @md:w-52 h-64 object-top"
                />
              </figure>

              <div class="flex flex-col flex-1 @md:w-2/3">
                <h3
                  class="h4 text-primary-800 !leading-none mb-2"
                  x-text="faculty.first_name + ' ' + faculty.last_name"
                >
                </h3>
                <p
                  class="text-tertiary-500 leading-none font-title uppercase font-bold"
                  :class="hasContactInfo(faculty) ? 'border-b border-gray-300  pb-4' : 'mb-4'"
                  x-text="faculty.job_title"
                >
                </p>

                <ul class="space-y-2 py-4 text-sm">
                  <li class="flex items-center gap-2" x-show="faculty.email">
                    <Icon name="envelope" class="size-5 shrink-0" />
                    <a class="link text-primary-800" :href="`mailto:${faculty.email}`">Send email</a
                    >
                  </li>
                  <li class="flex items-center gap-2" x-show="faculty.phone">
                    <Icon name="phone" class="size-5 shrink-0" />
                    <a
                      class="link text-primary-800"
                      :href="`tel:${faculty.phone}`"
                      x-text="faculty.phone"></a>
                  </li>
                  <li class="flex items-center gap-2" x-show="faculty.website">
                    <Icon name="globe" class="size-5 shrink-0" />
                    <a class="link text-primary-800" :href="faculty.website">Visit my website</a>
                  </li>
                </ul>

                <a class="btn-primary w-max mt-auto" :href="faculty.profile_url">Read bio</a>
              </div>
            </div>
          </article>
        </template>
      </div>

      <template x-if="getStaff().length > 0 && !loading && !error">
        <div>
          <h2 class="h3">Department Staff</h2>

          <div class="grid sm:grid-cols-2 md:grid-cols-3 gap-4 mb-8">
            <template x-for="faculty in getStaff()">
              <article class="@container border border-gray-300 bg-gray-100 px-6 py-4">
                <div class="flex flex-col @md:flex-row gap-4 h-full">
                  <figure class="@md:w-1/3">
                    <img
                      :src="faculty.headshotURL"
                      :alt="faculty.first_name + ' ' + faculty.last_name"
                      class="w-full object-cover shrink-0 @md:w-52 h-56"
                    />
                  </figure>

                  <div class="flex flex-col flex-1 @md:w-2/3">
                    <h3
                      class="h4 text-primary-800 !leading-none mb-2"
                      x-text="faculty.first_name + ' ' + faculty.last_name"
                    >
                    </h3>
                    <p
                      class="text-tertiary-500 leading-none font-title uppercase font-bold"
                      :class="hasContactInfo(faculty) ? 'border-b border-gray-300 pb-4' : 'mb-4'"
                      x-text="faculty.job_title"
                    >
                    </p>

                    <ul class="space-y-2 py-4 text-sm">
                      <li class="flex items-center gap-2" x-show="faculty.email">
                        <Icon name="envelope" class="size-5 shrink-0" />
                        <a class="link text-primary-800" :href="`mailto:${faculty.email}`"
                          >Send email</a
                        >
                      </li>
                      <li class="flex items-center gap-2" x-show="faculty.phone">
                        <Icon name="phone" class="size-5 shrink-0" />
                        <a
                          class="link text-primary-800"
                          :href="`tel:${faculty.phone}`"
                          x-text="faculty.phone"></a>
                      </li>
                      <li class="flex items-center gap-2" x-show="faculty.website">
                        <Icon name="globe" class="size-5 shrink-0" />
                        <a class="link text-primary-800" :href="faculty.website">Visit my website</a
                        >
                      </li>
                    </ul>

                    <a class="btn-primary w-max mt-auto" :href="faculty.profile_url">Read bio</a>
                  </div>
                </div>
              </article>
            </template>
          </div>
        </div>
      </template>
    </div>
  </div>
</WithoutHero>
