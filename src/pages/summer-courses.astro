---
import Icon from "../components/icon.astro";
import WithoutHero from "../layouts/without-hero.astro";
---

<WithoutHero
  title="Summer Courses"
  description="Summer Courses"
  sidebarLinks={[
    {
      title: "Academics",
      children: [
        { href: "/", name: "FAQ's" },
        { href: "/", name: "Project planning" },
        { href: "/", name: "Services provided" },
        { href: "/", name: "Support & training" },
        { href: "/", name: "Website governance" },
      ],
    },
  ]}
  breadcrumbs={[
    { name: "Home", href: "/" },
    { name: "Campus Directory", href: "/" },
  ]}
>
  <h2 class="h3">Make the most of your summer with Messiah's summer online courses</h2>

  <div class="rich-text">
    <p>
      Messiah University can help you keep your education moving forward and earn the college
      credits you need with the flexibility of Messiahâ€™s undergraduate online summer courses.
    </p>

    <ul>
      <li>
        <strong>BIOL 117 and CHEM 106</strong> &nbsp;require a one-week on-campus lab intensive, to be
        held August 11-15, 2025. On campus accommodations, if needed, can be arranged for an additional
        cost.
      </li>
      <li>
        Early 6-week Summer and Full Summer registration will close on May 14, 2025&nbsp;(May 18 for
        current Messiah students).
      </li>
      <li>
        Late 6-week Summer registration will close on July 1, 2025&nbsp;(July 6 for current Messiah
        students).
      </li>
    </ul>
  </div>

  <div
    x-data="{
      courses: [],
      selected: null,
      loading: true,
      error: null,
      filters: {
        quest: '',
        education: '',
        query: '',
      },
      open: null,
      
      init() {
        this.$nextTick(() => this.select('all'));
        
        fetch('https://apps3.messiah.edu/summer_online/summer_online.json')
          .then((response) => response.json())
          .then((data) => {
            this.courses = data.entries;
            this.loading = false;
          })
          .catch((error) => {
            this.error = `Could not fetch courses data (${error.message})`;
            this.loading = false;
          });
      },

      select(key) {
        this.selected = key;
      },

      isSelected(key) {
        return this.selected === key;
      },

      get categorizedCourses() {
        if (this.selected === 'all') {
          return this.courses;
        }

        if (this.selected === 'other') {
          return this.courses.filter((course) => course.summer_term !== 'UG Summer Early 6 Week' && course.summer_term !== 'UG Summer Late 6 Week' && course.summer_term !== 'UG Full Summer');
        }

        return this.courses.filter((course) => course.summer_term === this.selected);
      },

      get filteredCourses() {
        const search = this.filters.query.trim().toLowerCase();
        const quest = this.filters.quest;
        const education = this.filters.education;

        return this.categorizedCourses.filter((course) => {
          const name = course.course_name.toLowerCase();
          const number = course.course_number.toLowerCase();

          const matchesQuery = name.includes(search) || number.includes(search);
          const matchesQuest = quest ? course.attributes.includes(quest) : true;
          const matchesEducation = education ? course.attributes.includes(education) : true;

          return matchesQuery && matchesQuest && matchesEducation;
        }).sort((a, b) => a.course_name.localeCompare(b.course_name));
      },

      filterSelectOptions(arr) {
        const attributes = this.getUniqueAttributes();

        return arr.filter((option) => {
          return attributes.has(option.code);
        });
      },

      formatDate(date) {
        return new Date(date).toLocaleDateString('en-US', {
          month: 'short',
          day: 'numeric',
        });
      },

      getUniqueAttributes() {
        const unique = new Set();

        for (let i = 0; i < this.courses.length; i++) {
          for (let j = 0; j < this.courses[i].attributes.length; j++) {
            unique.add(this.courses[i].attributes[j]);
          }
        }

        return unique;
      },

      getEntryDetails(type) {
        if (!this.open) {
          return null;
        }

        const { attributes } = this.open;

        return attributes.map((attribute) => {
          return this.dropdowns[type].find((option) => option.code === attribute)?.label;
        }).filter((attribute) => {
          return Boolean(attribute) && attribute !== 'None';
        }).join(', ');
      },

      reset() {
        this.filters.quest = '';
        this.filters.education = '';
        this.filters.query = '';
      }
    }"
  >
    <div class="relative mb-4">
      <Icon name="search" class="absolute top-1/2 left-4 size-5 -translate-y-1/2 text-gray-400" />
      <input
        type="search"
        x-model="filters.query"
        autocomplete="off"
        placeholder="Search by name or course number..."
        aria-label="Search by name or course number..."
        class="bg-white w-full min-h-12 px-4 pl-12 border border-gray-300"
        @keydown.enter="scrollToTable"
      />
      <button
        type="button"
        title="Clear input"
        x-show="filters.query.length > 0"
        @click="filters.query = ''"
        class="absolute top-1/2 right-4 -translate-y-1/2 text-gray-400 cursor-pointer"
      >
        <Icon name="close" class="size-5" />
      </button>
    </div>

    <template x-if="loading">
      <div
        role="alert"
        class="bg-tertiary-100 border border-tertiary-200 text-tertiary-800 px-4 py-2"
      >
        <p>Loading summer courses...</p>
      </div>
    </template>

    <template x-if="error">
      <div role="alert" class="text-red-600 border border-red-200 bg-red-50 py-2 px-4">
        <p class="mb-2">Snap! Something went wrong. Please refresh the page or try again later.</p>
        <code x-text="error" class="text-sm leading-none"></code>
      </div>
    </template>

    <template x-if="!filteredCourses.length && !loading && !error">
      <div
        role="alert"
        class="bg-tertiary-100 border border-tertiary-200 text-tertiary-800 px-4 py-2"
      >
        <p class="mb-4">
          No summer course matches your search "<span x-text="search"></span>".
        </p>

        <button type="button" @click="search = ''" class="btn btn-quaternary">Reset</button>
      </div>
    </template>

    <ul class="text-sm" x-show="filteredCourses.length && !error && !loading">
      <template x-for="entry in filteredCourses" :key="entry.entry_id">
        <li
          class="border-b border-b-gray-200 hover:bg-gray-100 transition-colors scroll-m-28"
          :data-letter="entry.entry_name.at(0)"
        >
          <span x-text="entry.entry_name"></span>
        </li>
      </template>
    </ul>
  </div>
</WithoutHero>
