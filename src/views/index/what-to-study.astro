---
import Icon from "../../components/icon.astro";
---

<section class="bg-[url(/patterns/img-05.png)] bg-no-repeat bg-cover">
  <div class="wrapper py-24">
    <header class="mb-8">
      <h2 class="text-tertiary-400 h2">What do you want to study?</h2>
      <p class="text-white paragraph">
        Search by keywords or interests to explore which of Messiah's 80+ academic programs would be
        a good fit for you.
      </p>
    </header>

    <search>
      <form action="/" method="GET" class="relative">
        <input
          type="search"
          name="s"
          class="bg-white w-full px-4 h-16 text-lg"
          placeholder="Search for programs"
          required
          data-what-to-study-trigger
          aria-label="enter a program name that you'd like to search for"
        />
        <button type="submit" class="absolute btn-primary top-2 right-2">Go</button>
      </form>
    </search>

    <div class="flex gap-2 flex-wrap mt-8">
      <a class="btn-secondary" href="https://www.messiah.edu/majors-minors-programs"
        >View all Undergraduate Programs</a
      >
      <a class="btn-secondary" href="http://www.messiah.edu/info/20436/degrees"
        >View all Graduate Programs</a
      >
    </div>
  </div>
</section>

<dialog
  data-what-to-study-dialog
  class="backdrop:bg-primary-800/80 backdrop:backdrop-blur-sm bg-transparent overflow-y-auto w-[75vw] max-w-5xl"
>
  <div class="wrapper py-24 text-white">
    <header class="flex items-center justify-center relative mb-8">
      <h3 class="text-center h3 text-white !mb-0">Search by program names or interests</h3>
      <button
        type="button"
        class="absolute right-0 hover:text-tertiary-400 transition-colors"
        aria-label="close dialog"
        data-what-to-study-close
      >
        <Icon name="close" class="size-10" />
      </button>
    </header>

    <search>
      <form>
        <div class="relative mb-8">
          <input
            type="search"
            name="s"
            id="s"
            class="bg-transparent placeholder:text-primary-200 w-full border-b-2 border-white text-xl py-2 pl-10"
            data-what-to-study-search
            placeholder="Search for programs"
            aria-label="search input"
          />
          <Icon
            name="search"
            class="size-6 pointer-events-none absolute left-0 top-1/2 -translate-y-1/2"
          />
        </div>

        <output for="s">
          <p class="mb-4">Suggested search terms:</p>

          <ul data-what-to-study-list></ul>
        </output>
      </form>
    </search>
  </div>
</dialog>

<script>
  let input = document.querySelector<HTMLInputElement>("[data-what-to-study-trigger]");
  let dialog = document.querySelector<HTMLDialogElement>("[data-what-to-study-dialog]");
  let close = dialog?.querySelector<HTMLButtonElement>("[data-what-to-study-close]");
  let search = dialog?.querySelector<HTMLInputElement>("[data-what-to-study-search]");
  let list = dialog?.querySelector<HTMLUListElement>("[data-what-to-study-list]");
  let data: { entry_title: string; keywords: string }[] = [];

  async function getData() {
    try {
      let response = await fetch("/subjects.json");

      if (!response.ok) {
        throw new Error(await response.text());
      }

      data = await response.json();
    } catch (ex) {
      console.log("Could not fetch data", ex);
    }
  }

  function renderList(results: { entry_title: string; keywords: string }[]) {
    let html = results.map((result) => {
      return `
        <li class="text-lg pl-4">
          <a href="/" class="link">${result.entry_title}</a>
        </li>
      `;
    });

    if (list) {
      list.innerHTML = html.join("");
    }
  }

  input?.addEventListener("input", async (event) => {
    if (data.length === 0) {
      await getData();
    }

    if (search) {
      search.value = (event.target as HTMLInputElement).value;
      dialog?.showModal();
      search.focus();
    }
  });

  search?.addEventListener("input", (event) => {
    const query = (event.target as HTMLInputElement).value.trim().toLowerCase();
    const results = data.filter(({ entry_title, keywords }) => {
      return entry_title.toLowerCase().includes(query) || keywords.toLowerCase().includes(query);
    });

    renderList(results.slice(0, 10));
  });

  window.addEventListener("keydown", (event) => {
    if (event.key === "Escape") {
      dialog?.close();
      input!.value = "";
    }
  });

  close?.addEventListener("click", () => {
    dialog?.close();
    input!.value = "";
  });
</script>
